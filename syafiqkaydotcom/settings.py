# Django settings for syafiqkaydotcom project.
# Generated by 'django-admin startproject' using Django 5.2.4.
# For more information on this file, see https://docs.djangoproject.com/en/5.2/topics/settings/
# For the full list of settings and their values, see https://docs.djangoproject.com/en/5.2/ref/settings/

# Load environment variables from .env before anything else
from dotenv import load_dotenv # type: ignore
load_dotenv()

# Path settings
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Security settings
import os
SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY", "dev-secret-key")  # Secret key for cryptographic signing (safe fallback for local dev)
DEBUG = True  # Set to True for local development
ALLOWED_HOSTS = [
    'syafiqkay.com',
    'www.syafiqkay.com',
    'localhost',
    '127.0.0.1',
    'syafiq-kay.onrender.com',  # Render.com deployment (old)
    'syafiq-kay.onrender.com:10000',  # Render.com deployment with port (old)
    'syafiq-kay-1.onrender.com',  # Render.com deployment (new)
    'sk-dxgmhag5dtcsamfh.uksouth-01.azurewebsites.net',  # Azure App Service deployment
]

# CSRF trusted origins for production and staging
CSRF_TRUSTED_ORIGINS = [
    "https://syafiqkay.com",
    "https://www.syafiqkay.com",
    "https://syafiq-kay-1.onrender.com",
    "https://sk-dxgmhag5dtcsamfh.uksouth-01.azurewebsites.net",
    "https://syafiq-kay.onrender.com",
]

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Project-specific apps
    'home',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'syafiqkaydotcom.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'syafiqkaydotcom.wsgi.application'

# Database Configuration
# Use Azure SQL Database if environment variables are set, otherwise fallback to SQLite
import sys

# Use SQLite for testing, SQL Server for development
if 'test' in sys.argv:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': ':memory:',
        }
    }
elif os.environ.get('AZURE_SQL_DB_HOST'):
    DATABASES = {
        'default': {
            'ENGINE': 'mssql',
            'NAME': os.environ.get('AZURE_SQL_DB_NAME'),
            'USER': os.environ.get('AZURE_SQL_DB_USER'),
            'PASSWORD': os.environ.get('AZURE_SQL_DB_PASSWORD'),
            'HOST': os.environ.get('AZURE_SQL_DB_HOST'),
            'PORT': os.environ.get('AZURE_SQL_DB_PORT', '1433'),
            'OPTIONS': {
                'driver': 'ODBC Driver 18 for SQL Server',
                'encrypt': True,
                'trust_server_certificate': False,
                'connection_timeout': 30,
            },
        }
    }
else:
    # Fallback to SQLite for local development
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-gb'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
